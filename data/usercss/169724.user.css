/* ==UserStyle==
@name         Stylus (Dark)
@namespace    USO Archive
@author       Max Altena
@description  A (dark) theme for Stylus
@version      20190309.13.31
@license      NONE
@preprocessor uso
==/UserStyle== */
@-moz-document regexp("chrome-extension://clngdbkpkpeebahjckkjfobafhncgmne/.*"), regexp("moz-extension://clngdbkpkpeebahjckkjfobafhncgmne/.*") {
:root {
    --primary: rgba(20, 20, 24, 1);
    --secondary: rgba(44, 49, 55, 1);
    --text: rgba(222, 222, 222, 1);
    --accent: rgba(3, 155, 229, 1);

    --odd: rgba(44, 49, 55, 0.3);
    --even: rgba(44, 49, 55, 0.2);

    --black: rgba(0, 0, 0, 1);
    --white: rgba(255, 255, 255, 1);
}

body,
#sections,
.section,
.applies-type option,
#help-popup {
    background: var(--primary) !important;
}
.entry.even {
    background: var(--even) !important;
}
.entry.odd {
    background: var(--odd) !important;
}
#header,
#stylus-popup,
#popup-options button,
#header option,
#header optgroup,
#message-box div,
.update-note {
    background: var(--secondary) !important;
}
#disableAll:hover,
#header input[type=checkbox]:hover {
    background: var(--text) !important;
}
.svg-icon,
button,
select,
input,
.style-name:hover::before {
    background: none !important;
}
body,
#header,
#stylus-popup,
#sections,
.section,
#hotkey-info,
.entry,
.actions a,
.main-controls label,
#popup-options button,
.applies-type,
button,
select,
input,
.entry,
.entry a {
    color: var(--text) !important;
}
#find-styles-link:hover,
.write-style-link:hover,
#popup-options button:hover,
button:hover,
.entry:hover a {
    color: var(--accent) !important;
}
.checker,
#disableAll,
#disableAll:hover,
#popup-options button,
select,
button,
input {
    border: 1px solid var(--text) !important;
}
#header,
#hotkey-info,
#filters select {
    border: none !important;
}
#hotkey-info[data-active] {
    border-left: 1px solid var(--primary) !important;
}
#installed {
    border-bottom: 1px solid var(--primary) !important;
}
.entry {
    border-bottom: 1px solid var(--secondary) !important;
}
#sections > :not(:first-child) {
    border-top: 2px solid var(--secondary) !important;
}
.actions a svg,
.svg-icon.select-arrow,
.svg-icon.info,
.svg-icon,
.add-applies-to .svg-icon.add,
.remove-applies-to .svg-icon.remove {
    fill: var(--text) !important;
}
.actions a:hover svg,
.svg-icon.checked,
.svg-icon.info:hover,
.svg-icon:hover,
.add-applies-to:hover .svg-icon.add,
.remove-applies-to:hover .svg-icon.remove {
    fill: var(--accent) !important;
}
#popup-options button,
input[type=checkbox],
#disableAll-label,
.style-name,
#find-styles-inline-group label,
select,
option,
.svg-icon.add,
.svg-icon.remove,
button,
label {
    cursor: pointer !important;
    pointer-events: auto !important;
}
#popup-options button,
a,
label,
button:hover,
.entry:hover a {
    transition: color 0.25s !important;
}
input[type=checkbox],
button {
    transition: color 0.25s, background 0.25s !important;
}
a.style-edit-link svg,
.delete svg {
    transition: fill 0.25s !important;
}
.CodeMirror {
    background: var(--secondary)!important;
    color: var(--text) !important;
}
.CodeMirror pre {
    background: transparent !important;
}
.CodeMirror div.CodeMirror-cursor {
    border-left: 1px solid var(--text);
}
.CodeMirror.cm-fat-cursor div.CodeMirror-cursor {
    background: var(--text);
}
.CodeMirror .CodeMirror-gutters {
    background-color: var(--secondary);
    border: none !important;
}
.CodeMirror-gutter-filler,
.CodeMirror-scrollbar-filler {
    background-color: var(--primary);
}
.CodeMirror-linenumber,
.CodeMirror-guttermarker,
.CodeMirror-guttermarker-subtle {
    color: var(--text) !important;
}
.CodeMirror-matchingtag {
    background: var(--accent);
}
.CodeMirror-activeline-background {
    background: var(--secondary);
}
.CodeMirror-selected {
    background: var(--primary);
}
.CodeMirror-focused .CodeMirror-selected {
    background: var(--primary);
}
textarea.CodeMirror-search-field {
    background: var(--primary)!important;
}
.cm-searching {
    background: var(--primary);
}
.cm-s-default .cm-keyword {
    color: rgba(206, 147, 216, 1);
}
.cm-s-default .cm-atom {
    color: rgba(159, 168, 218, 1);
}
.cm-s-default .cm-number {
    color: rgba(165, 214, 167, 1);
}
.cm-s-default .cm-def {
    color: rgba(83, 109, 254, 1);
}
.cm-s-default .cm-variable-2 {
    color: rgba(159, 168, 218, 1);
}
.cm-s-default .cm-variable-3 {
    color: rgba(197, 225, 165, 1);
}
.cm-s-default .cm-comment {
    color: rgba(255, 204, 128, 1);
}
.cm-s-default .cm-string {
    color: rgba(239, 154, 154, 1);
}
.cm-s-default .cm-string-2 {
    color: rgba(255, 171, 145, 1);
}
.cm-s-default .cm-meta {
    color: rgba(238, 238, 238, 1);
}
.cm-s-default .cm-qualifier {
    color: rgba(238, 238, 238, 1);
}
.cm-s-default .cm-builtin {
    color: rgba(179, 157, 219, 1);
}
.cm-s-default .cm-bracket {
    color: rgba(230, 238, 156, 1);
}
.cm-s-default .cm-tag {
    color: rgba(165, 214, 167, 1);
}
.cm-s-default .cm-attribute {
    color: rgba(64, 196, 255, 1);
}
.cm-s-default .cm-header {
    color: rgba(128, 203, 196, 1);
}
.cm-s-default .cm-quote {
    color: rgba(176, 190, 197, 1);
}
.cm-s-default .cm-hr {
    color: rgba(54, 54, 54, 1);
}
.cm-s-default .cm-link {
    color: rgba(148, 148, 148, 1);
}
.cm-negative {
    color: rgba(191, 54, 12, 1);
}
.cm-positive {
    color: rgba(12, 191, 114, 1);
}
.cm-invalidchar,
.cm-s-default .cm-error {
    color: rgba(191, 54, 12, 1);
}
div.CodeMirror span.CodeMirror-matchingbracket {
    color: rgba(12, 191, 114, 1);
}
div.CodeMirror span.CodeMirror-nonmatchingbracket {
    color: rgba(191, 54, 12, 1);
}
}