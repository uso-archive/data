/* ==UserStyle==
@name         Overcast.fm Native Mac App Styling with MiniPlayer
@namespace    USO Archive
@author       KZeni
@description  Makes Overcast.fm behave much more like a native app. Most importantly, it includes slim & short window styling which combine to make a MiniPlayer which is much nicer to use when leaving the site open as an always-on-top overlay.
@version      20180201.18.56
@license      CC-BY-NC-ND-4.0
@preprocessor uso
==/UserStyle== */
/*
	Overcast.fm Native Mac App Styling with MiniPlayer
	Author: Kurt Zenisek (kzeni.com)
	Version: 1.0 (1-31-2018)
*/
@-moz-document domain(overcast.fm) {
/* Make user interactions more app-like */
html { cursor:default!important; -webkit-user-select:none!important; -moz-user-select:none!important; user-select:none!important; }
* { -webkit-user-drag:none!important; -moz-user-drag:none!important; user-drag:none!important; }
a,input,button,select,textarea { cursor:auto!important; }
a,button,input[type="submit"] { cursor:pointer!important; }
input,button,select,textarea { -webkit-user-select:auto!important; -moz-user-select:auto!important; user-select:auto!important; -webkit-user-drag:auto!important; -moz-user-drag:auto!important; user-drag:auto!important; }
/* Add hover & focus states to links for better feedback & accessibility */
a:hover,.ocbutton:hover,.ocborderedbutton:hover,a:focus,.ocbutton:focus,.ocborderedbutton:focus {
	color:#fc953a!important;
}
/* Add active state to links for better feedback & accessibility */
a:active,.ocbutton:active,.ocborderedbutton:active {
	color:#c66209!important;
}
/* Add hover & focus states to playback buttons for better feedback & accessibility */
#seekbackbutton:hover svg *:not([fill="none"]),#seekforwardbutton:hover svg *:not([fill="none"]),#playpausebutton:hover svg *:not([fill="none"]),#seekbackbutton:focus svg *:not([fill="none"]),#seekforwardbutton:focus svg *:not([fill="none"]),#playpausebutton:focus svg *:not([fill="none"]) {
	fill:#fc953a!important;
}
/* Add hover & focus states to playback buttons for better feedback & accessibility */
#seekbackbutton:hover svg *[fill="none"],#seekforwardbutton:hover svg *[fill="none"],#playpausebutton:hover svg *[fill="none"],#seekbackbutton:focus svg *[fill="none"],#seekforwardbutton:focus svg *[fill="none"],#playpausebutton:focus svg *[fill="none"] {
	stroke:#fc953a!important;
}
/* Add active state to playback buttons for better feedback & accessibility */
#seekbackbutton:active svg *:not([fill="none"]),#seekforwardbutton:active svg *:not([fill="none"]),#playpausebutton:active svg *:not([fill="none"]) {
	fill:#c66209!important;
}
/* Add active state to playback buttons for better feedback & accessibility */
#seekbackbutton:active svg *[fill="none"],#seekforwardbutton:active svg *[fill="none"],#playpausebutton:active svg *[fill="none"] {
	stroke:#c66209!important;
}
/* Make the hover state on the episode listing items also be used for focus for better feeback & accessibility */
.feedcell:hover,.episodecell:hover,.extendedepisodecell:hover,.feedcell:focus,.episodecell:focus,.extendedepisodecell:focus {
	background-color:rgba(252, 126, 15, 0.05)!important;
}
/* Add active state to the episode listing items for better feeback & accessibility */
.feedcell:active,.episodecell:active,.extendedepisodecell:active {
	background-color:rgba(252, 126, 15, 0.1)!important;
}
/* Add hover & focus states to orange bordered/selected segment buttons for better feedback & accessibility */
.ocborderedbutton:hover,.ocborderedbutton:focus {
	color:#fff!important;
	background-color:rgba(253, 127, 16, 0.9)!important;
}
/* Add active state to orange bordered/selected segment buttons for better feedback & accessibility */
.ocborderedbutton:active, .ocsegmentedbuttonselected {
	color:#fff!important;
	background-color:rgba(253, 127, 16, 1)!important;
}
/* Add hover & focus states to delete/"destructive" buttons for better feedback & accessibility */
.destructivebutton:hover,.controller_admin .destructivebutton:hover,.destructivebutton:focus,.controller_admin .destructivebutton:focus {
	color:#fff!important;
	background-color:rgba(253, 28, 16, 0.9)!important;
}
/* Add active state to delete/"destructive" buttons for better feedback & accessibility */
.destructivebutton:active,.controller_admin .destructivebutton:active {
	color:#fff!important;
	background-color:rgba(253, 28, 16, 1)!important;
}
/* Add hover & focus states to playback progress slider for better feedback & accessibility */
#progressslidercontainer:hover #progressslider {
	cursor:pointer!important;
	cursor:grab!important;
}
#progressslidercontainer:hover #progressslider::-webkit-slider-thumb,#progressslidercontainer:focus #progressslider::-webkit-slider-thumb {
	background:#fc953a!important;
}
#progressslidercontainer:hover #progressslider::-moz-range-thumb,#progressslidercontainer:focus #progressslider::-moz-range-thumb {
	background:#fc953a!important;
}
/* Add active state to playback progress slider for better feedback & accessibility */
#progressslidercontainer:active #progressslider {
	cursor:grabbing!important;
}
#progressslidercontainer:active #progressslider::-webkit-slider-thumb {
	background:#c66209!important;
}
#progressslidercontainer:active #progressslider::-moz-range-thumb {
	background:#c66209!important;
}
/* Improve vertical alignment of speed labels */
#speedcontrolbackground { margin-top:0!important; }
#speedcontrolcontainer .speedlabel { line-height:29px!important; vertical-align:middle!important; }
/* Add hover & focus states to speed slider for better feedback & accessibility */
#speedcontrolcontainer:hover #speedcontrol {
	cursor:pointer!important;
	cursor:grab!important;
}
#speedcontrolcontainer:hover #speedcontrol::-webkit-slider-thumb,#speedcontrolcontainer:focus #speedcontrol::-webkit-slider-thumb {
	background:#fc953a!important;
}
#speedcontrolcontainer:hover #speedcontrol::-moz-range-thumb,#speedcontrolcontainer:focus #speedcontrol::-moz-range-thumb {
	background:#fc953a!important;
}
/* Add active state to speed slider for better feedback & accessibility */
#speedcontrolcontainer:active #speedcontrol {
	cursor:grabbing!important;
}
#speedcontrolcontainer:active #speedcontrol::-webkit-slider-thumb {
	background:#c66209!important;
}
#speedcontrolcontainer:active #speedcontrol::-moz-range-thumb {
	background:#c66209!important;
}
/* Prevent footer links from being wrapped into multiple lines of text, if possible */
.footer a { display:inline-block!important; }

/* Slim-player style */
@media (max-width: 400px) {
	/* Hide All Podcasts Link since the logo does this & saves space */
	.content .centertext.lighttext:first-child {
		display:none!important;
	}
	/* Make navbar stuck to the top of the page */
	.nav { position:fixed!important; top:0!important; left:0!important; right:0!important; padding-left:16px!important; padding-right:16px!important; background:rgba(255,255,255,0.94)!important; -webkit-backdrop-filter:blur(0.5em)!important; z-index:9999!important; }
	/* Make content account for the fixed position navbar */
	.content { margin-top:2.8em!important; }
	.content h2:first-child,.content h2:nth-child(3) {
		margin-top:0.5em !important;
	}
	/* Make episode listing items show full width (retaining the body's padding within its own content area) */
	.feedcell,.episodecell,.extendedepisodecell {
		margin-left:-16px!important;
		margin-right:-16px!important;
		padding-left:16px!important;
		padding-right:16px!important;
	}
	.feedcell .cellcontent,.episodecell .cellcontent {
		width:calc(100% - 96px - 16px)!important;
	}
	/* Help optimize screen space */
	#speedcontrols .centertext { display:none!important; }
}

/* MiniPlayer style */
@media (max-height: 300px) {
	/* Use minimized player style */
	/* `.titlestack:not(.feedcell .titlestack,.episodecell .titlestack,.extendedepisodecell .titlestack),#progressbar,#speedcontrols` is the actual preferred selector for the line below, but userstyle.org couldn't parse it (even though it's what we want) */
	.titlestack,#progressbar,#speedcontrols { float:right!important; width:calc(100% - 96px)!important; }
	#progressbar { margin:0.2em 0!important; }
	.fullart_container { width:80px!important; height:80px!important; }
	#playcontrols_container { float:left; width:80px!important; margin:0.2em 0!important; }
	#playpausebutton { left:1em!important; right:1em!important; width:calc(80px - 2em)!important; }
	#seekbackbutton,#seekforwardbutton { left:0!important; width:1em!important; margin-top:0.5em!important; }
	#seekforwardbutton { left:auto!important; right:0!important; }
	#playpausebutton svg { max-height:2em!important; }
	#seekbackbutton svg,#seekforwardbutton svg { max-height:1em!important; }
	#speedcontrols { margin-bottom:1em!important; }
	.content .centertext.lighttext:first-child,#episode_body { clear:both!important; }
}
}