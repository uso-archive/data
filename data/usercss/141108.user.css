/* ==UserStyle==
@name         beam.pro for streamers(pair w/ beam pop-out chat)
@namespace    USO Archive
@author       MSFT Server
@description  no interactive, re-themed, pop-outchat using share&embed link  Set URL starting with to https://beam.pro  NOTE:gives False Errors due to using variables but works fine  Also Goes along with pop-out chat style -> https://userstyles.org/styles/141109/beam-pro-pop-out-chat
@version      20170409.06.17
@license      CC-BY-4.0
@preprocessor uso
==/UserStyle== */
@-moz-document domain(beam.pro) {
:root {
  --blue: #00A8FF; 
  --pane-padding: 5px 42px;
  --yellow: yellow;                     
}


.channel-side {
    display: none;
    visibility: hidden;
}
.timestamp span {
    font-size: 12px;
    color: red;
}
b-interactive-iframe.hide-xs.hide-sm {
    display: none;
}
b-toggle-interactive-controls {
    display: none;
}
bui-card.channel-recordings {
    display: none;
}
button#fullscreen-button {
    display: none;
}

body {
    color: var(--blue);
}
bui-tab-label {
    color: var(--blue);
}
span.set-material.icon-search {
    color: var(--blue);
}
label {
    color: var(--blue);
}
.point-label {
    color: var(--yellow);
}
.default-mode input {
    color: var(--blue);
}
.default-mode span {
    color: var(--blue);
}
nav .grouped-btn-row button {
    color: var(--blue);
}
.menu-area > header {
    color: green;
}
.value {
    color: var(--blue);
}
.bui-color-muted {
    color: var(--blue);
}
.bui-label {
    color: var(--blue);
}
.bui-flb-label {
    color: var(--blue);
}
.offline-message {
    color: red;
}
button h3 {
    color: var(--blue);
}
b-media-card-header .stats[_ngcontent-c43] {
    color: var(--yellow);
}
b-media-card-header[_ngcontent-c43] .titles[_ngcontent-c43] h1[_ngcontent-c43] {
    color: var(--yellow);
}
b-media-card-footer[_ngcontent-c43] .channel-name[_ngcontent-c43] {
    color: var(--blue);
}
h1[_ngcontent-c39] {
    font-size: 15px;
    color: var(--blue);
}
.viewers[_ngcontent-c42] {
    font-size: 14px;
    color: limegreen;
}
b-media-card-header[_ngcontent-c43] .titles[_ngcontent-c43] h2[_ngcontent-c43] {
    color: green;
}
.type[_ngcontent-c42] h1[_ngcontent-c42] {
    color: var(--blue);
}
.bui-color-primary {
    color: var(--yellow);
}
.display-4 {
    opacity: 1;
}
.display-3 {
    opacity: 1;
}
.display-2 {
    opacity: 1;
}
.display-1 {
    opacity: 1;
}
.headline {
    opacity: 1;
}
.title {
    opacity: 1;
}
::-webkit-scrollbar-thumb {
    background: var(--blue);
}
::-webkit-scrollbar-thumb {
    background: var(--blue);
}
span[_ngcontent-c6] {
    color: #E8BA2E;
}
.user-tag[_ngcontent-c31] {
    color: mediumspringgreen;
}
bui-icon[_ngcontent-c6] {
    color: #E8BA2E;
}
.bui-toggle-frame[_ngcontent-c48] {
    border: 2px solid var(--blue);
}
.bui-toggle-handle[_ngcontent-c48] {
    background: red;
}
.bui-toggle-checked[_nghost-c48] {
    background-color: limegreen;
}
.bui-toggle-handle[_ngcontent-c48] {
    background-color: limegreen;
}
.selection[_ngcontent-c14] {
    color: var(--blue);
    border: var(--blue) solid;
}
.hasValue.hasLabel[_nghost-c47] {
    color: var(--blue);
}
.bui-flb-label[_ngcontent-c47] {
    color: var(--blue);
}
[_nghost-c14] {
    padding: 25px 0;
}
[_nghost-c15] {
    color: var(--blue);
}
.bui-label[_ngcontent-c48] {
    color: var(--blue);
}
.bui-flb-label[_ngcontent-c47] {
    top: -10px;
}
.selection[_ngcontent-c14] bui-icon[_ngcontent-c14] {
    color: var(--blue);
}
.viewers[_ngcontent-c27] b-number-ticker[_ngcontent-c27] {
    color: green;
}
.options[_ngcontent-c14] {
    border: solid var(--blue);
}
.time[_ngcontent-c19] {
    font-size: 1.5em;
    color: red;
}
h1 {
    color: var(--blue);
}
h2 {
    color: var(--blue);
}
h3[_ngcontent-c17] b[_ngcontent-c17] {
    color: var(--blue);
}
h3[_ngcontent-c19] b[_ngcontent-c19] {
    color: var(--blue);
}
bui-dialog-header h1 {
    color: var(--blue);
}
.statistics[_ngcontent-c36] div[_ngcontent-c36] > b[_ngcontent-c36] {
    color: var(--blue);
}
.statistics[_ngcontent-c36] div[_ngcontent-c36] > span[_ngcontent-c36] {
    color: var(--blue);
}
.bui-btn[data-variant='default'].bui-btn-raised[_ngcontent-c2]:not(.bui-btn-bordered) {
    color: var(--blue);
}
.bui-btn[data-variant='default'][_ngcontent-c2] {
    color: var(--blue);
}
h1.layout-row.layout-align-center-center.bui-padding-top-1x {
    animation: colorRotate 6s linear 0s infinite;
    color: red;
}
.role-user[_nghost-c41] .username[_ngcontent-c41] {
    color: white;
}
.role-pro[_nghost-c41] .username[_ngcontent-c41] {
    color: #c642ea;
}
.role-subscriber[_nghost-c41] .username[_ngcontent-c41] {
    color: red;
}
.role-mod[_nghost-c41] .username[_ngcontent-c41] {
    animation: colorRotate .5s linear 0s infinite;
    color: green;
}
.role-staff[_nghost-c41] .username[_ngcontent-c41] {
    color: yellow;
}
.role-owner[_nghost-c41] .username[_ngcontent-c41] {
    color: green;
}
.role-user[_nghost-c41] .image[_ngcontent-c41] {
    background-color: white;
}
.role-pro[_nghost-c41] .image[_ngcontent-c41] {
    background-color: #c642ea;
}
.role-subscriber[_nghost-c41] .image[_ngcontent-c41] {
    background-color: red;
}
.role-mod[_nghost-c41] .image[_ngcontent-c41] {
    animation: colorRotate2 .5s linear 0s infinite;
    background-color: green;
}
.role-staff[_nghost-c41] .image[_ngcontent-c41] {
    background-color: yellow;
}
.role-owner[_nghost-c41] .image[_ngcontent-c41] {
    background-color: green;
}
h3[_ngcontent-c17] {
    font-size: 15px;
    color: green;
    line-height: 10px;
}
h3[_ngcontent-c19] {
    font-size: 14px;
    color: var(--yellow);
    line-height: 16px;
}
/* i really want this to be global */
@keyframes colorRotate {
    from {
        color: rgb(255, 0, 0);
    }
    16.6% {
        color: rgb(255, 0, 255);
    }
    33.3% {
        color: rgb(0, 100, 255);
    }
    50% {
        color: rgb(0, 255, 255);
    }
    66.6% {
        color: rgb(0, 255, 0);
    }
    83.3% {
        color: rgb(255, 255, 0);
    }
    to {
        color: rgb(255, 0, 0);
    }
}
@keyframes colorRotate2 {
    from {
        background-color: rgb(255, 0, 0);
    }
    16.6% {
        background-color: rgb(255, 0, 255);
    }
    33.3% {
        background-color: rgb(0, 100, 255);
    }
    50% {
        background-color: rgb(0, 255, 255);
    }
    66.6% {
        background-color: rgb(0, 255, 0);
    }
    83.3% {
        background-color: rgb(255, 255, 0);
    }
    to {
        background-color: rgb(255, 0, 0);
    }
}


.statistics {
    padding-right: 300px;
}
.bui-btn-icon[_ngcontent-c2] {
    min-width: 50px;
}
.home-btn.hide-xs.hide-sm {
    padding-left: 20px;
}
b-channel-creator {
    animation: colorRotate 6s linear 0s infinite;
    color: red;
}
}