/* ==UserStyle==
@name         Perfect display target link language (hreflang)
@namespace    USO Archive
@author       Delavy
@description  This rules are for display the target language of a link when it is different of the text who contain it. It include a lot of scenario, according different attributes.  Because the "lang" attribute isn't always informed, I write too style 19012 , who always display hreflang (when the lang attribute is not specified).  For example :   - when the text is english, and the target on french => (fr)  - when the text is english, and the text of the link and the target are in french => (fr)  - when the text is englsih, and the text of the- link is french and the target is german => (de)    This rules take in charge all target language, but to add a redaction language, just add declaration with the language name.  Because the language can be specified with an attribute Regional (e.g. "en-us"), I use CSS3 selector who allow to specify "who start by" : ^. So it can make problems on browser who don't support CSS3 (but yes, firefox 3.* support CSS3)    For more explications, look at http://delavy.hyperficiel.com/index.php?art=24    If these rules pose problems on some sites, say it here and I add exclusions
@version      20090626.11.57
@license      NONE
@preprocessor uso
==/UserStyle== */
@namespace url(http://www.w3.org/1999/xhtml);

a[hreflang]:not([hreflang^="fr"]):lang(fr):after,
a[lang^="fr"]:after,
a[hreflang]:not([hreflang^="de"]):lang(de):after,
a[lang^="de"]:after,
a[hreflang]:not([hreflang^="es"]):lang(es):after,
a[lang^="es"]:after,
a[hreflang]:not([hreflang^="en"]):lang(en):after,
a[lang^="en"]:after{
  content: " (" attr(hreflang) ")";
}

:lang(en)>a[lang]:not([hreflang]):after,
:lang(de)>a[lang]:not([hreflang]):after,
:lang(es)>a[lang]:not([hreflang]):after,
:lang(fr)>a[lang]:not([hreflang]):after,
:lang(en)>a[lang^="en"]:after,
:lang(de)>a[lang^="de"]:after,
:lang(es)>a[lang^="es"]:after,
:lang(fr)>a[lang^="fr"]:after{
content:none;
}

a[hreflang=""]:after,
h1>a[hreflang]:after,
h2>a[hreflang]:after,
h3>a[hreflang]:after{
  content:none !important;
}